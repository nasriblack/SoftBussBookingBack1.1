// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  isVerified   Boolean       @default(false)
  role         Role          @default(USER)
  reservations Reservation[]
}

model WhiteListUser {
  id    Int    @id @default(autoincrement())
  email String @unique
}

model Bus {
  id          Int         @id @default(autoincrement())
  destination Destination @default(NABEUL)
  name        String
  seatsNumber Int         @default(29)
}

// model Seat {
//   id          Int          @id @default(autoincrement())
//   number      Int
//   busId       Int
//   bus         Bus          @relation(fields: [busId], references: [id])
//   reservation Reservation?
// }

model Reservation {
  id          Int         @id @default(autoincrement())
  userId      String
  destination Destination @default(NABEUL)
  reservedAt  DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
  seat        String      @unique
  isCanceled  Boolean     @default(false)
  // seat        Seat        @relation(fields: [seatId], references: [id])
  user        User        @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum Destination {
  NABEUL
  BIZERT
}
